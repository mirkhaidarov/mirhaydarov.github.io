{"version":3,"sources":["types/base-types.ts","utils/validate-rules.ts","features/resend-email/features/form/organisms/root/style.module.css","features/resend-email/organisms/header/style.module.css","features/resend-email/organisms/main/style.module.css","features/resend-email/organisms/header/index.tsx","features/resend-email/features/form/store/index.ts","features/resend-email/features/form/organisms/fields/email-input/index.tsx","features/resend-email/features/form/organisms/root/index.tsx","features/resend-email/organisms/main/index.tsx","features/resend-email/organisms/root/index.tsx"],"names":["MockUser","rules","userNameIsEmpty","name","validator","value","length","errorText","authentication","email","emailIsIncorrect","test","emailIsEmpty","passwordIsEmpty","password","module","exports","Header","type","className","classes","button","form","createForm","fields","init","validateOn","EmailInput","useField","onChange","hasError","useForm","placeholder","errorBorder","e","target","Form","submit","eachValid","errors","useEffect","reset","onSubmit","preventDefault","disabled","Main","wrap","title","desc","Desc","cancel","to","Book","root","supportLink","href","rel","ResendEmail"],"mappings":"qGAAO,IAAKA,E,2CAAAA,K,4BAAAA,E,yBAAAA,M,KCGL,IAAMC,EAAQ,CACnBC,gBAAiB,iBAAqB,CACpCC,KAAM,WACNC,UAAW,SAACC,GAAD,OAA4B,IAAjBA,EAAMC,QAC5BC,UAAW,4DAEbC,eAAgB,iBAAqB,CACnCL,KAAM,iBACNC,UAAW,SAACC,GAAD,OAAWA,IAAUL,EAASS,OACzCF,UAAW,yHAEbE,MAAO,iBAAqB,CAC1BN,KAAM,QACNC,UAAW,SAACC,GAAD,OAAWA,IAAUL,EAASS,OACzCF,UAAW,mHAEbG,iBAAkB,iBAAqB,CACrCP,KAAM,QACNC,UAAW,SAACC,GAAD,MAAW,yCAAyCM,KAAKN,IACpEE,UAAW,6QAEbK,aAAc,iBAAqB,CACjCT,KAAM,aACNC,UAAW,SAACC,GAAD,OAA4B,IAAjBA,EAAMC,QAC5BC,UAAW,+CAEbM,gBAAiB,iBAAqB,CACpCV,KAAM,gBACNC,UAAW,SAACC,GAAD,OAA4B,IAAjBA,EAAMC,QAC5BC,UAAW,8EAEbO,SAAU,iBAAqB,CAC7BX,KAAM,WACNC,UAAW,SAACC,GAAD,OAAWA,IAAUL,EAASc,UACzCP,UAAW,qH,mBCpCfQ,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,wB,mBCAtDD,EAAOC,QAAU,CAAC,OAAS,wB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,KAAO,oBAAoB,YAAc,6B,mHCExGC,EAAS,WACpB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,KAAK,SAASC,UAAWC,IAAQC,OAAzC,+C,sCCFAC,EAAOC,YAAW,CACtBC,OAAQ,CACNf,MAAO,CACLgB,KAAM,GACNxB,MAAO,CAACA,IAAMW,eAAgBX,IAAMS,sBAGxCgB,WAAY,CAAC,Y,iBCNFC,EAAa,WAAO,IAAD,EACHC,YAASN,EAAKE,OAAOf,OAAxCN,EADsB,EACtBA,KAAM0B,EADgB,EAChBA,SACNC,EAAaC,YAAQT,GAArBQ,SAER,OACE,cAAC,IAAD,CACEZ,KAAK,OACLc,YAAY,QACZb,UAAWW,EAAS,SAAWV,IAAQa,YAAc,GACrDJ,SAAU,SAACK,GAAD,OAAOL,EAASK,EAAEC,OAAO9B,QACnCF,KAAMA,KCRCiC,EAAO,WAAO,IAAD,EACiBL,YAAQT,GAAzCe,EADgB,EAChBA,OAAQ9B,EADQ,EACRA,UAAW+B,EADH,EACGA,UAErBC,EAAS,CAAChC,EAAU,UAW1B,OAJAiC,qBAAU,WACR,OAAO,kBAAMlB,EAAKmB,WACjB,IAGD,uBAAMtB,UAAWC,IAAQE,KAAMoB,SAVhB,SAACR,GAChBA,EAAES,iBACFN,KAQA,UACE,cAAC,EAAD,IAEA,cAAC,IAAD,CAAYE,OAAQA,IAEpB,cAAC,IAAD,CAAQpB,UAAWC,IAAQC,OAAQH,KAAK,SAAS0B,UAAWN,EAA5D,6G,iBCrBOO,EAAO,WAClB,OACE,qBAAK1B,UAAWC,IAAQ0B,KAAxB,SACE,eAAC,IAAD,CAAUC,MAAM,4GAAuBC,KAAMC,IAA7C,UACE,cAAC,EAAD,IAEA,cAAC,IAAD,CAAM9B,UAAWC,IAAQ8B,OAAQC,GAAIC,IAAKC,KAA1C,oEAQFJ,EAAO,kBACX,oBAAG9B,UAAWC,IAAQ4B,KAAtB,yhCAIE,mBACE7B,UAAWC,IAAQkC,YACnBC,KAAK,uBACLpB,OAAO,SACPqB,IAAI,sBAJN,iCAJF,0JCjBWC,EAAc,kBACzB,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/4.eccaf993.chunk.js","sourcesContent":["export enum MockUser {\n  email = \"example@example.com\",\n  password = \"password2021\",\n}\n\nexport interface IUser {\n  userName: string;\n  email: string;\n  password: string;\n  promocode?: string | null;\n}\n","import { Rule } from \"effector-forms\";\nimport { MockUser } from \"../types/base-types\";\n\nexport const rules = {\n  userNameIsEmpty: (): Rule<string> => ({\n    name: \"userName\",\n    validator: (value) => value.length !== 0,\n    errorText: \"Ведите имя\",\n  }),\n  authentication: (): Rule<string> => ({\n    name: \"authentication\",\n    validator: (value) => value === MockUser.email,\n    errorText: \"Данный email не существует\",\n  }),\n  email: (): Rule<string> => ({\n    name: \"email\",\n    validator: (value) => value === MockUser.email,\n    errorText: \"Неверный email или пароль\",\n  }),\n  emailIsIncorrect: (): Rule<string> => ({\n    name: \"email\",\n    validator: (value) => /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.com)+$/.test(value),\n    errorText: \"Возможно вы ошиблись в указании почтового индекса\",\n  }),\n  emailIsEmpty: (): Rule<string> => ({\n    name: \"emailEmpty\",\n    validator: (value) => value.length !== 0,\n    errorText: \"Ведите email\",\n  }),\n  passwordIsEmpty: (): Rule<string> => ({\n    name: \"passwordEmpty\",\n    validator: (value) => value.length !== 0,\n    errorText: \"Ведите пароль\",\n  }),\n  password: (): Rule<string> => ({\n    name: \"password\",\n    validator: (value) => value === MockUser.password,\n    errorText: \"Неверный email или пароль\",\n  }),\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__ZISBN\",\"button\":\"style_button__zS2lU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__Sn1UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"style_wrap__ypkRQ\",\"cancel\":\"style_cancel__3faEG\",\"desc\":\"style_desc__c3AlH\",\"supportLink\":\"style_supportLink__28MNU\"};","import { Button, Header as BaseHeader } from \"../../../ui\";\r\nimport classes from \"./style.module.css\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <BaseHeader>\r\n      <Button type=\"button\" className={classes.button}>\r\n        Выйти\r\n      </Button>\r\n    </BaseHeader>\r\n  );\r\n};\r\n","import { createForm } from \"effector-forms\";\r\nimport { IUser } from \"../../../../../types\";\r\nimport { rules } from \"../../../../../utils\";\r\n\r\nconst form = createForm({\r\n  fields: {\r\n    email: {\r\n      init: \"\" as IUser[\"email\"],\r\n      rules: [rules.emailIsEmpty(), rules.emailIsIncorrect()],\r\n    },\r\n  },\r\n  validateOn: [\"submit\"],\r\n});\r\n\r\nexport {\r\n  form\r\n};\r\n","import { useForm, useField } from \"effector-forms\";\r\nimport { form } from \"../../../store\";\r\nimport { Input } from \"../../../../../../ui\";\r\nimport classes from \"../../root/style.module.css\";\r\n\r\nexport const EmailInput = () => {\r\n  const { name, onChange } = useField(form.fields.email);\r\n  const { hasError } = useForm(form);\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      placeholder=\"Email\"\r\n      className={hasError(\"email\") ? classes.errorBorder : \"\"}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      name={name}\r\n    />\r\n  );\r\n};\r\n","import { FormEvent, useEffect } from \"react\";\r\nimport { useForm } from \"effector-forms\";\r\nimport { Button, FormErrors } from \"../../../../../ui\";\r\nimport { form } from \"../../store\";\r\nimport * as Fields from \"../fields\";\r\nimport classes from \"./style.module.css\";\r\n\r\nexport const Form = () => {\r\n  const { submit, errorText, eachValid } = useForm(form);\r\n\r\n  const errors = [errorText('email')]\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    submit();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => form.reset();\r\n  }, []);\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={onSubmit}>\r\n      <Fields.EmailInput />\r\n\r\n      <FormErrors errors={errors} />\r\n\r\n      <Button className={classes.button} type=\"submit\" disabled={!eachValid}>\r\n        Отправить заново\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Book } from \"../../../../routes/book\";\r\nimport { Main as BaseMain } from \"../../../ui\";\r\nimport { Form } from \"../../features\";\r\nimport classes from \"./style.module.css\";\r\n\r\nexport const Main = () => {\r\n  return (\r\n    <div className={classes.wrap}>\r\n      <BaseMain title=\"Мне не пришло письмо\" desc={Desc()}>\r\n        <Form />\r\n\r\n        <Link className={classes.cancel} to={Book.root}>\r\n          Отменить\r\n        </Link>\r\n      </BaseMain>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Desc = () => (\r\n  <p className={classes.desc}>\r\n    Письмо может прийти с задержкой в 5-10 минут. Также проверьте разные папки\r\n    почтового ящика (актуально для gmail.com) и папку \"Спам\". Если письмо все же\r\n    не пришло, повторите попытку или напишите об этом в тех.поддержку&nbsp;\r\n    <a\r\n      className={classes.supportLink}\r\n      href=\"/support@livedune.ru\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      support@livedune.ru\r\n    </a>\r\n    &nbsp;и мы активируем ваш аккаунт.\r\n  </p>\r\n);\r\n","import { BaseTemplate } from \"../../../ui\";\r\nimport { Header } from \"../header\";\r\nimport { Main } from \"../main\";\r\n\r\nexport const ResendEmail = () => (\r\n  <BaseTemplate>\r\n    <Header />\r\n    <Main />\r\n  </BaseTemplate>\r\n);\r\n"],"sourceRoot":""}