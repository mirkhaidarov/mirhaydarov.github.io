{"version":3,"sources":["types/base-types.ts","utils/validate-rules.ts","features/restore-password/features/form/organisms/root/style.module.css","features/restore-password/organisms/main/style.module.css","features/restore-password/features/form/store/effects.ts","features/restore-password/features/form/store/events.ts","features/restore-password/features/form/store/index.ts","features/restore-password/features/form/organisms/fields/email-input/index.tsx","features/restore-password/features/form/organisms/root/index.tsx","features/restore-password/organisms/main/index.tsx","features/restore-password/organisms/root/index.tsx"],"names":["MockUser","rules","userNameIsEmpty","name","validator","value","length","errorText","authentication","email","emailIsIncorrect","test","emailIsEmpty","passwordIsEmpty","password","module","exports","sendRestorePasswordFx","createEffect","handler","Promise","resolve","setTimeout","redirectFx","history","push","Book","emailSend","provideHistory","createEvent","form","createForm","fields","init","validateOn","$loading","pending","guard","source","sample","$isValid","submit","filter","payload","target","clock","doneData","EmailInput","useField","onChange","hasError","useForm","type","placeholder","className","classes","errorBorder","e","Form","eachValid","loading","useStore","useHistory","errors","useEffect","reset","onSubmit","preventDefault","button","disabled","buttonDesc","loader","Main","main","titleImg","titleImgAlt","title","desc","cancel","to","root","RestorePassword"],"mappings":"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","file":"static/js/8.296dcf8c.chunk.js","sourcesContent":["export enum MockUser {\n  email = \"example@example.com\",\n  password = \"password2021\",\n}\n\nexport interface IUser {\n  userName: string;\n  email: string;\n  password: string;\n  promocode?: string | null;\n}\n","import { Rule } from \"effector-forms\";\nimport { MockUser } from \"../types/base-types\";\n\nexport const rules = {\n  userNameIsEmpty: (): Rule<string> => ({\n    name: \"userName\",\n    validator: (value) => value.length !== 0,\n    errorText: \"Ведите имя\",\n  }),\n  authentication: (): Rule<string> => ({\n    name: \"authentication\",\n    validator: (value) => value === MockUser.email,\n    errorText: \"Данный email не существует\",\n  }),\n  email: (): Rule<string> => ({\n    name: \"email\",\n    validator: (value) => value === MockUser.email,\n    errorText: \"Неверный email или пароль\",\n  }),\n  emailIsIncorrect: (): Rule<string> => ({\n    name: \"email\",\n    validator: (value) => /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.com)+$/.test(value),\n    errorText: \"Возможно вы ошиблись в указании почтового индекса\",\n  }),\n  emailIsEmpty: (): Rule<string> => ({\n    name: \"emailEmpty\",\n    validator: (value) => value.length !== 0,\n    errorText: \"Ведите email\",\n  }),\n  passwordIsEmpty: (): Rule<string> => ({\n    name: \"passwordEmpty\",\n    validator: (value) => value.length !== 0,\n    errorText: \"Ведите пароль\",\n  }),\n  password: (): Rule<string> => ({\n    name: \"password\",\n    validator: (value) => value === MockUser.password,\n    errorText: \"Неверный email или пароль\",\n  }),\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__2zliT\",\"button\":\"style_button__3Uk4H\",\"buttonDesc\":\"style_buttonDesc__3rKNB\",\"loader\":\"style_loader__2xvuh\",\"lds-ring\":\"style_lds-ring__3-xq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancel\":\"style_cancel__veWdk\",\"main\":\"style_main__1dI3U\"};","import { createEffect } from \"effector\";\r\nimport { Book } from \"../../../../../routes/book\";\r\n\r\nexport const sendRestorePasswordFx = createEffect({\r\n  handler() {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, 1500);\r\n    });\r\n  },\r\n});\r\n\r\nexport const redirectFx = createEffect({\r\n  handler(history: any) {\r\n    return history.push(Book.emailSend);\r\n  },\r\n});\r\n","import { RouteComponentProps } from \"react-router-dom\";\r\nimport { createEvent } from \"effector\";\r\n\r\nexport const provideHistory = createEvent<RouteComponentProps[\"history\"]>();\r\n","import { guard, sample } from \"effector\";\r\nimport { createForm } from \"effector-forms\";\r\nimport { IUser } from \"../../../../../types\";\r\nimport { rules } from \"../../../../../utils\";\r\nimport { redirectFx, sendRestorePasswordFx } from \"./effects\";\r\nimport { provideHistory } from \"./events\";\r\n\r\nconst form = createForm({\r\n  fields: {\r\n    email: {\r\n      init: \"\" as IUser[\"email\"],\r\n      rules: [rules.emailIsEmpty(), rules.authentication()],\r\n    },\r\n  },\r\n  validateOn: [\"submit\"],\r\n});\r\n\r\nconst $loading = sendRestorePasswordFx.pending;\r\n\r\nguard({\r\n  source: sample(form.fields.email.$isValid, form.submit),\r\n  filter: (payload) => payload,\r\n  target: sendRestorePasswordFx,\r\n});\r\n\r\nsample({\r\n  source: provideHistory,\r\n  clock: sendRestorePasswordFx.doneData,\r\n  target: redirectFx,\r\n});\r\n\r\nexport {\r\n  $loading,\r\n  form,\r\n  sendRestorePasswordFx,\r\n  redirectFx,\r\n  provideHistory,\r\n};\r\n","import { useForm, useField } from \"effector-forms\";\r\nimport { form } from \"../../../store\";\r\nimport { Input } from \"../../../../../../ui\";\r\nimport classes from \"../../root/style.module.css\";\r\n\r\nexport const EmailInput = () => {\r\n  const { name, onChange } = useField(form.fields.email);\r\n  const { hasError } = useForm(form);\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      placeholder=\"Email\"\r\n      className={hasError(\"email\") ? classes.errorBorder : \"\"}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      name={name}\r\n    />\r\n  );\r\n};\r\n","import { FormEvent, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStore } from \"effector-react\";\r\nimport { useForm } from \"effector-forms\";\r\nimport { Button, FormErrors } from \"../../../../../ui\";\r\nimport { $loading, form, provideHistory } from \"../../store\";\r\nimport * as Fields from \"../fields\";\r\nimport classes from \"./style.module.css\";\r\n\r\nexport const Form = () => {\r\n  const { submit, errorText, eachValid } = useForm(form);\r\n  const loading = useStore($loading);\r\n  const history = useHistory();\r\n\r\n  const errors = [errorText(\"email\")];\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    submit();\r\n  };\r\n\r\n  useEffect(() => {\r\n    provideHistory(history)\r\n    return () => form.reset();\r\n  }, [history]);\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={onSubmit}>\r\n      <Fields.EmailInput />\r\n\r\n      <FormErrors errors={errors} />\r\n\r\n      <Button className={classes.button} type=\"submit\" disabled={!eachValid}>\r\n        <span className={classes.buttonDesc}>\r\n          {loading ? \"Отправка\" : \"Отправить\"}\r\n\r\n          {loading && (\r\n            <div className={classes.loader}>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          )}\r\n        </span>\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Book } from \"../../../../routes/book\";\r\nimport { Main as BaseMain } from \"../../../ui\";\r\nimport { Form } from \"../../features\";\r\nimport classes from \"./style.module.css\";\r\n\r\nexport const Main = () => {\r\n  return (\r\n    <div className='wrap'>\r\n      <BaseMain\r\n        className={classes.main}\r\n        titleImg=\"lock.svg\"\r\n        titleImgAlt=\"lock\"\r\n        title=\"Восстановить пароль\"\r\n        desc=\"Введите e-mail, на который регистрировались ранее\"\r\n      >\r\n        <Form />\r\n\r\n        <Link className={classes.cancel} to={Book.root}>\r\n          Отменить\r\n        </Link>\r\n      </BaseMain>\r\n    </div>\r\n  );\r\n};\r\n","import { BaseTemplate, Header } from \"../../../ui\";\r\nimport { Main } from \"../main\";\r\n\r\nexport const RestorePassword = () => (\r\n  <BaseTemplate>\r\n    <Header />\r\n    <Main />\r\n  </BaseTemplate>\r\n);\r\n"],"sourceRoot":""}