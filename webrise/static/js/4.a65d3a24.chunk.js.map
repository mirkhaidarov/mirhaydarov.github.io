{"version":3,"sources":["utils/validate-rules.ts","features/registration/features/form/store/events.ts","features/registration/features/form/store/index.ts","features/registration/features/form/organisms/fields/diploma-number-input/index.tsx","features/registration/features/form/organisms/fields/diploma-series-input/index.tsx","features/registration/features/form/organisms/fields/education-select/index.tsx","features/registration/features/form/organisms/fields/ending-input/index.tsx","features/registration/features/form/organisms/fields/nostrification-checkbox/index.tsx","features/registration/features/form/organisms/fields/qualification-input/index.tsx","features/registration/features/form/organisms/fields/speciality-input/index.tsx","features/registration/features/form/organisms/fields/university-select/index.tsx","features/registration/features/form/organisms/root/index.tsx","features/result/organisms/root/index.tsx","features/registration/organisms/root/index.tsx"],"names":["rules","title","name","validator","value","length","errorText","min","resultToggler","createEvent","onCancel","form","createForm","fields","DiplomaNumber","init","DiplomaSeries","Education","YearOfEnding","Qualification","Speciality","University","Nostrification","validateOn","$isResultVisible","restore","reset","guard","source","submit","filter","$isValid","target","prepend","forward","from","to","DiplomaNumberInput","useField","onChange","useForm","hasError","error","e","label","errors","DiplomaSeriesInput","required","EducationSelect","data","educationsLevel","onSelect","EndingInput","NostrificationCheckbox","FormControlLabel","control","Checkbox","checked","QualificationInput","SpecialityInput","UniversitySelect","classes","useStyles","universities","onReset","console","log","Icon","Search","className","search","makeStyles","theme","color","palette","primary","main","Form","eachValid","FileInputDesc","fileInputDesc","wrap","onSubmit","preventDefault","Grid","container","spacing","item","xs","desc","innerWrap","cn","button","disabled","type","asteriskDesc","asteriskRequired","onClick","asteriskPublic","width","marginTop","marginRight","display","fontSize","fontWeight","justifyContent","padding","backgroundColor","info","dark","outline","border","light","cursor","borderRadius","Result","isResultVisible","useStore","values","Card","card","cardTitle","displayNone","visible","flexDirection","Registration"],"mappings":"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","file":"static/js/4.a65d3a24.chunk.js","sourcesContent":["import { Rule } from 'effector-forms';\n\nexport const rules = {\n  required: (title: string): Rule<string> => ({\n    name: \"minLength\",\n    validator: (value) => value.length !== 0,\n    errorText: `${title} обязательно для заполнения`,\n  }),\n  checkboxRequired: (title: string): Rule<boolean> => ({\n    name: \"minLength\",\n    validator: (value) => value,\n    errorText: `${title} обязательно для заполнения`,\n  }),\n  minLength: (min: number): Rule<string> => ({\n    name: \"minLength\",\n    validator: (value) => value.length >= min,\n    errorText: `Длина не может быть меньше ${min}`,\n  }),\n  maxLength: (max: number): Rule<string> => ({\n    name: \"maxLength\",\n    validator: (value) => value.length <= max,\n    errorText: `Длина не может быть больше ${max}`,\n  }),\n};\n","import { FormEvent, MouseEvent } from 'react'\nimport { createEvent } from 'effector'\n\nexport const resultToggler = createEvent<boolean>()\n\nexport const onSubmit = createEvent<FormEvent<HTMLFormElement>>()\n\nexport const onCancel = createEvent<MouseEvent<HTMLButtonElement>>()\n","import { restore, forward, guard } from 'effector';\nimport { createForm } from 'effector-forms';\nimport { IEducation } from '../../../../../types';\nimport { rules } from '../../../../../utils';\nimport { resultToggler, onCancel } from './events'\n\nconst form = createForm({\n  fields: {\n    DiplomaNumber: {\n      init: '' as IEducation['DiplomaNumber']\n    },\n    DiplomaSeries: {\n      init: '' as IEducation['DiplomaSeries'],\n      rules: [rules.minLength(6)],\n    },\n    Education: {\n      init: '' as IEducation['Education'],\n      rules: [rules.required('Уровень образования')]\n    },\n    YearOfEnding: {\n      init: '' as IEducation['YearOfEnding'],\n      rules: [rules.minLength(4)],\n    },\n    Qualification: {\n      init: '' as IEducation['Qualification'],\n      rules: [rules.required('Квалификация по диплому')]\n    },\n    Speciality: {\n      init: '' as IEducation['Speciality'],\n    },\n    University: {\n      init: '' as IEducation['University']\n    },\n    Nostrification: {\n      init: false as IEducation['Nostrification'],\n      rules: [rules.checkboxRequired('Нострификация')],\n    }\n  },\n  validateOn: ['submit'],\n});\n\nconst $isResultVisible = restore(resultToggler, false)\n  .reset(form.reset)\n\nguard({\n  source: form.submit,\n  filter: form.$isValid,\n  target: resultToggler.prepend(() => true)\n})\n\nforward({\n  from: onCancel,\n  to: form.reset\n})\n\nexport { form, $isResultVisible, onCancel };\n","import { ChangeEvent, FC } from 'react';\nimport { useField, useForm } from 'effector-forms/dist';\nimport { Input, FormErrors } from '../../../../../../ui';\nimport { form } from '../../../store';\n\nexport const DiplomaNumberInput: FC = () => {\n  const { value, onChange } = useField(form.fields.DiplomaNumber);\n  const { hasError, errorText } = useForm(form);\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length <= 7) {\n      onChange(e.target.value);\n    }\n  };\n\n  return (\n    <>\n      <Input\n        error={hasError('DiplomaNumber')}\n        value={value}\n        onChange={onChangeHandler}\n        label=\"Номер диплома\"\n      />\n      <FormErrors errors={[errorText('DiplomaNumber')]} />\n    </>\n  );\n};\n","import { ChangeEvent, FC } from 'react';\nimport { useField, useForm } from 'effector-forms/dist';\nimport { Input, FormErrors } from '../../../../../../ui';\nimport { form } from '../../../store';\n\nexport const DiplomaSeriesInput: FC = () => {\n  const { value, onChange } = useField(form.fields.DiplomaSeries);\n  const { hasError, errorText } = useForm(form);\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length <= 6) {\n      onChange(e.target.value);\n    }\n  };\n\n  return (\n    <>\n      <Input\n        required\n        error={hasError('DiplomaSeries')}\n        value={value}\n        onChange={onChangeHandler}\n        label=\"Серия диплома\"\n      />\n      <FormErrors errors={[errorText('DiplomaSeries')]} />\n    </>\n  );\n};\n","import { ChangeEvent, FC } from 'react';\nimport { useField, useForm } from 'effector-forms/dist';\nimport { Dropdown, FormErrors } from '../../../../../../ui';\nimport { form } from '../../../store';\nimport { educationsLevel } from './db.json';\n\nexport const EducationSelect: FC = () => {\n  const { value, onChange } = useField(form.fields.Education);\n  const { hasError, errorText } = useForm(form);\n\n  const onSelectHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <>\n      <Dropdown\n        required\n        data={educationsLevel}\n        error={hasError('Education')}\n        value={value}\n        label=\"Уровень образования\"\n        onSelect={onSelectHandler}\n      />\n\n      <FormErrors errors={[errorText('Education')]} />\n    </>\n  );\n};\n","import { ChangeEvent, FC } from 'react';\nimport { useField, useForm } from 'effector-forms/dist';\nimport { Input, FormErrors } from '../../../../../../ui';\nimport { form } from '../../../store';\n\nexport const EndingInput: FC = () => {\n  const { value, onChange } = useField(form.fields.YearOfEnding);\n  const { hasError, errorText } = useForm(form);\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length <= 4) {\n      onChange(e.target.value);\n    }\n  };\n\n  return (\n    <>\n      <Input\n        required\n        error={hasError('YearOfEnding')}\n        value={value}\n        onChange={onChangeHandler}\n        label=\"Год окончания\"\n      />\n      <FormErrors errors={[errorText('YearOfEnding')]} />\n    </>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport { useForm, useField } from 'effector-forms/dist';\nimport { Checkbox, FormControlLabel } from '@mui/material';\nimport { FormErrors } from '../../../../../../ui';\nimport { form } from '../../../store';\n\nexport const NostrificationCheckbox = () => {\n  const { value, onChange } = useField(form.fields.Nostrification);\n  const { errorText } = useForm(form);\n\n  const onChangeHandler = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    onChange(target.checked);\n  };\n\n  return (\n    <>\n      <FormControlLabel\n        label=\"Нострификация\"\n        control={<Checkbox checked={value} onChange={onChangeHandler} />}\n      />\n      <FormErrors errors={[errorText('Nostrification')]} />\n    </>\n  );\n};\n","import { ChangeEvent, FC } from 'react';\nimport { useField, useForm } from 'effector-forms/dist';\nimport { Input, FormErrors } from '../../../../../../ui';\nimport { form } from '../../../store';\n\nexport const QualificationInput: FC = () => {\n  const { value, onChange } = useField(form.fields.Qualification);\n  const { hasError, errorText } = useForm(form);\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <>\n      <Input\n        required\n        error={hasError('Qualification')}\n        value={value}\n        onChange={onChangeHandler}\n        label=\"Квалификация по диплому\"\n      />\n\n      <FormErrors errors={[errorText('Qualification')]} />\n    </>\n  );\n};\n","import { ChangeEvent, FC } from 'react';\nimport { useField } from 'effector-forms/dist';\nimport { Input } from '../../../../../../ui';\nimport { form } from '../../../store';\n\nexport const SpecialityInput: FC = () => {\n  const { value, onChange } = useField(form.fields.Speciality);\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <Input\n      required\n      value={value}\n      onChange={onChangeHandler}\n      label=\"Специальность по диплому\"\n    />\n  );\n};\n","import { ChangeEvent, FC, FormEvent } from 'react';\nimport { Theme } from '@mui/material';\nimport { makeStyles } from '@material-ui/styles';\nimport { Search as SearchIcon } from '@material-ui/icons';\nimport { useField } from 'effector-forms/dist';\nimport { Dropdown } from '../../../../../../ui';\nimport { form } from '../../../store';\nimport { universities } from './db.json';\n\nexport const UniversitySelect: FC = () => {\n  const classes = useStyles();\n  const { value, onChange } = useField(form.fields.University);\n\n  const onSelectHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n  };\n\n  const onResetHandler = (e: FormEvent<HTMLDivElement>) => {\n    console.log('e')\n  }\n  \n\n\n  return (\n    <Dropdown\n      required\n      data={universities}\n      value={value}\n      onReset={onResetHandler}\n      label=\"Введите для выбора ВУЗа\"\n      Icon={<SearchIcon className={classes.search} />}\n      onSelect={onSelectHandler}\n    />\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  search: {\n    color: theme.palette.primary.main,\n  },\n}));\n","import { FormEvent } from 'react';\nimport { useForm } from 'effector-forms';\nimport cn from 'classnames';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Theme } from '@mui/material';\nimport { FileInput } from '../../../../../ui';\nimport * as Fields from '../fields';\nimport { form, onCancel } from '../../store';\n\nexport const Form = () => {\n  const classes = useStyles();\n  const { submit, eachValid } = useForm(form);\n\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    submit();\n  };\n\n  const FileInputDesc = () => (\n    <span>\n      Загрузить файлы или&nbsp;\n      <span className={classes.fileInputDesc}>открыть проводник</span>\n    </span>\n  );\n\n  return (\n    <div>\n      <h1 className={classes.title}>Образование</h1>\n\n      <form className={classes.wrap} onSubmit={onSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Fields.EducationSelect />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Fields.EndingInput />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Fields.UniversitySelect />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Fields.DiplomaSeriesInput />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Fields.DiplomaNumberInput />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Fields.SpecialityInput />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Fields.QualificationInput />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Fields.NostrificationCheckbox />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FileInput desc={<FileInputDesc />} />\n          </Grid>\n\n          <div className={classes.innerWrap}>\n            <div>\n              <button\n                className={cn(classes.button, classes.submit)}\n                disabled={!eachValid}\n                type=\"submit\"\n              >\n                Сохранить\n              </button>\n              <p className={classes.asteriskDesc}>\n                <span className={classes.asteriskRequired}>*</span>Поля обязательные для заполнения\n              </p>\n            </div>\n\n            <div>\n              <button\n                className={classes.button}\n                type=\"button\"\n                onClick={onCancel}\n              >\n                Отмена\n              </button>\n              <p className={classes.asteriskDesc}>\n                <span className={classes.asteriskPublic}>*</span>Поля видны для всех пользователей\n              </p>\n            </div>\n          </div>\n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  wrap: {\n    width: '45vw',\n    marginTop: '2.25rem',\n    marginRight: '2rem',\n    display: 'grid',\n  },\n  title: {\n    fontSize: '1.4rem',\n    fontWeight: 500,\n    color: '#271919',\n  },\n  innerWrap: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    width: '100%',\n    padding: '0 1rem',\n  },\n  button: {\n    fontWeight: 500,\n    width: '18vw',\n    backgroundColor: 'unset',\n    fontSize: '0.8rem',\n    color: theme.palette.info.dark,\n    padding: '1rem 4rem',\n    outline: 'none',\n    border: `1px solid ${theme.palette.info.light}`,\n    cursor: 'pointer',\n    borderRadius: '1.2rem',\n    '&:disabled': {\n      backgroundColor: theme.palette.info.dark,\n      color: '#ffffff',\n      cursor: 'not-allowed',\n    },\n  },\n  submit: {\n    backgroundColor: theme.palette.primary.main,\n    border: '1px solid transparent',\n    color: '#ffffff',\n  },\n  fileInputDesc: {\n    color: '#000000',\n  },\n  asteriskDesc: {\n    marginTop: '0.5rem',\n    fontSize: '0.7rem',\n    color: theme.palette.info.light\n  },\n  asteriskRequired: {\n    color: theme.palette.primary.main,\n    marginRight: '0.3rem'\n  },\n  asteriskPublic: {\n    color: '#E78E24',\n    marginRight: '0.3rem'\n  }\n}));\n","import { FC } from 'react';\nimport { useStore } from 'effector-react';\nimport { useForm } from 'effector-forms/dist';\nimport cn from 'classnames';\nimport { Grid, Theme, FormControlLabel, Checkbox } from '@mui/material';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  $isResultVisible,\n  form,\n} from '../../../registration/features/form/store';\nimport { FileInput } from '../../../ui';\n\nexport const Result: FC = () => {\n  const classes = useStyles();\n  const isResultVisible = useStore($isResultVisible);\n  const { values } = useForm(form);\n  const {\n    Education,\n    YearOfEnding,\n    University,\n    DiplomaNumber,\n    DiplomaSeries,\n    Speciality,\n    Qualification,\n    Nostrification,\n  } = values;\n\n  const Card = ({\n    title,\n    desc,\n  }: {\n    title: string;\n    desc?: string | number | boolean;\n  }) => {\n    return (\n      <div className={classes.card}>\n        <h2 className={classes.cardTitle}>{title}</h2>\n        {desc ? <p>{desc}</p> : ''}\n      </div>\n    );\n  };\n\n  return (\n    <div className={cn(classes.displayNone, isResultVisible ? classes.visible : '')}>\n      <h1 className={classes.title}>Образование</h1>\n\n      <div className={classes.wrap}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Card title=\"Уровень образования\" desc={Education} />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Card title=\"Год окончания\" desc={YearOfEnding} />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Card title=\"Год окончания\" desc={University} />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Card title=\"Серия диплома\" desc={DiplomaSeries} />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Card title=\"Номер диплома\" desc={DiplomaNumber} />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Card title=\"Специальность по диплому\" desc={Speciality} />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Card title=\"Квалификация по диплому\" desc={Qualification} />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControlLabel\n              label=\"Нострификация\"\n              control={<Checkbox checked={Nostrification} />}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FileInput desc=\"Скачать документ\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  wrap: {\n    marginTop: '2.25rem',\n    width: '45vw',\n  },\n  title: {\n    fontSize: '1.4rem',\n    fontWeight: 500,\n    color: '#271919',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardTitle: {\n    fontSize: '0.8rem',\n    fontWeight: 400,\n    color: theme.palette.info.light,\n  },\n  displayNone: {\n    display: 'none',\n  },\n  visible: {\n    display: 'block',\n  },\n}));\n","import { FC } from 'react';\nimport { Theme } from '@mui/material';\nimport { makeStyles } from '@material-ui/styles';\nimport { Form } from '../../features';\nimport { Result } from '../../../result'\n\nexport const Registration: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <main className={classes.main}>\n      <Form />\n      <Result />\n    </main>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n"],"sourceRoot":""}